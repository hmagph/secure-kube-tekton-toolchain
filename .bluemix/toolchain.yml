version: '2'
messages:
  $i18n: locales.yml
template:
  name:
    $ref: "#/messages/template.name"
  description:
    $ref: "#/messages/template.description"
  header: '![](toolchain.svg?localize)'
  icon: secure-lock-kubernetes.svg
  required:
    - build
    - app_repo
    - pipeline_repo
  info:
    git url: >
      "[" + $env.repository + "]" +
        "(" + $env.repository + ")"
    git branch: >
      "[" + $env.branch + "]" +
        "(" + $env.repository +
          "/tree/" + $env.branch + ")"
toolchain:
  name: 'kube-tekton-toolchain-{{timestamp}}'
  template:
    getting_started:
      $ref: "#/messages/template.gettingStarted"
services:
  app_repo:
    service_id: >
      $env.source_provider ? $env.source_provider : 'hostedgit'
    parameters:
      repo_name: 'hello-containers-{{timestamp}}'
      repo_url: >
        $env.type === 'link' ? 
          $env.app_repo : 'https://github.com/open-toolchain/hello-containers'
      source_repo_url: >
        $env.type === 'fork' || $env.type === 'clone' ? 
          $env.app_repo : 'https://github.com/open-toolchain/hello-containers'
      type: $env.type || 'clone'
      has_issues: true
      enable_traceability: true
  pipeline_repo:
    service_id: >
      $env.source_provider ? $env.source_provider : 'hostedgit'
    parameters:
      repo_name: 'pipeline-{{timestamp}}'
      repo_url: >
        $env.type === 'link' ? 
          $env.pipeline_repo : 'https://github.com/hmagph/secure-kube-tekton-toolchain'
      source_repo_url: >
        $env.type === 'fork' || $env.type === 'clone' ? 
          $env.pipelinee_repo : 'https://github.com/hmagph/secure-kube-tekton-toolchain'
      type: $env.type || 'clone'
      has_issues: false
      enable_traceability: false
  build:
    service_id: pipeline
    parameters:
      services:
        - app_repo
        - pipeline_repo
      name: '{{services.app_repo.parameters.repo_name}}'
      type: tekton
      ui-pipeline: true
      configuration:
        content:
          $text: pipeline.yml
        env:
          APP_REPO: app_repo
          PIPELINE_REPO: pipeline_repo
          REPOSITORY: '{{services.app_repo.parameters.source_repo_url}}'
          REVISION: master
          APP_NAME: '{{form.pipeline.parameters.app-name}}'
          REGISTRY_REGION_ID: '{{form.pipeline.parameters.registry-region}}'
          REGISTRY_NAMESPACE: '{{form.pipeline.parameters.registry-namespace}}'
          API_KEY: '{{form.pipeline.parameters.api-key}}'
          PROD_REGION_ID: '{{form.pipeline.parameters.prod-region}}'
          PROD_RESOURCE_GROUP: '{{form.pipeline.parameters.prod-resource-group}}'
          PROD_CLUSTER_NAME: '{{form.pipeline.parameters.prod-cluster-name}}'
          PROD_CLUSTER_NAMESPACE: '{{form.pipeline.parameters.prod-cluster-namespace}}'
        execute: true
  webide:
    service_id: orion
form:
  pipeline:
    parameters:
      app-name: '{{services.app_repo.parameters.repo_name}}'
      prod-cluster-namespace: prod
    schema:
      $ref: deploy.json
